set nocompatible
filetype off

" ==========================================================
" Vundle- Allows us to organize our vim plugins
" ==========================================================
" Load pathogen with docs for all plugins

set rtp+=~/.vim/bundle/vundle/
call vundle#begin()

" let Vundle manage Vundle
" required! 
Plugin 'gmarik/vundle'

" zen coding (for HTML)
" CTRL + E -> Expand the tags
" CTRL + N -> Cycle through empty tags
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}

" FuGITive 
"
Plugin 'tpope/vim-fugitive'

" NERDTree
Plugin 'scrooloose/nerdtree'
nmap <silent> <Leader>n :NERDTreeToggle<CR>
let g:NERDTreeMapJumpNextSibling='l'
let g:NERDTreeMapJumpPrevSibling='h'

" <LEADER> + M -> Toggle NERDTree in all tabs
Plugin 'jistr/vim-nerdtree-tabs'
nmap <silent> <Leader>m :NERDTreeTabsToggle<CR>

" Syntastic
Plugin 'scrooloose/syntastic'
let g:syntastic_check_on_opne=1

" Ident Guides
Plugin 'nathanaelkane/vim-indent-guides'
nmap <silent> <Leader>g :IndentGuidesToggle<CR>
let g:indent_guides_auto_colors = 1
autocmd VimEnter,Colorscheme * :hi IndentGuidesOdd  guibg=red   ctermbg=3
autocmd VimEnter,Colorscheme * :hi IndentGuidesEven guibg=green ctermbg=4

" Plugin 'Yggdroot/indentLine'

" Snipmate
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
Plugin 'garbas/vim-snipmate'
Plugin 'honza/vim-snippets'

"imap <C-J> <Plug>snipMateNextOrTrigger
"smap <C-J> <Plug>snipMateNextOrTrigger

" CtrlP
Plugin 'kien/ctrlp.vim'

" Airline
Plugin 'bling/vim-airline'
set laststatus=2
let g:airline_powerline_fonts=1

" Colorschemes
Plugin 'flazz/vim-colorschemes'

" Colorscheme switcher
" <F8> -> :NextColorScheme
" <S-F8> -> :PrevColorScheme
Plugin 'xolox/vim-misc'
Plugin 'xolox/vim-colorscheme-switcher'

Plugin 'vim-scripts/django.vim'
Plugin 'gregsexton/MatchTag'
Plugin 'tpope/vim-surround'

Plugin 'Glench/Vim-Jinja2-Syntax'

" Auto Complete
Plugin 'Valloric/YouCompleteMe'
let g:ycm_autoclose_preview_window_after_completion=1
nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>


" Auto add matching brackets, parenthesis, brace and quotes
Plugin 'vim-scripts/simple-pairs'

" Displays bar with variables or functions in the file
Plugin 'majutsushi/tagbar'
"let g:tagbar_ctags_bin = "/usr/bin/ctags"

" Coffee Script support
Plugin 'kchmck/vim-coffee-script'

" Javascript semantic complete
Plugin 'marijnh/tern_for_vim'
let g:tern_show_arguments_hints='on_hold'

" OpenGL Shading Language Syntax
Plugin 'tikhomirov/vim-glsl'

call vundle#end()

filetype plugin on 
filetype indent on

" ==========================================================
" Basic Settings
" ==========================================================
syntax on
filetype on
set number

" displays tabs and end of lines
set listchars=tab:▸\ ,eol:¬,trail:-,precedes:<,extends:>
"set listchars=tab:▸\ ,eol:$
"set list

""" Reading/Wrinting
set ffs=unix,dos,mac

""" Moving Around/Editing
set cursorline
"set cursorcolumn
set tabstop=4		" <tab> inserts 4 spaces
set shiftwidth=4
set noexpandtab		" Use tabs, not spaces, for autoindent/tab key.
set shiftround		" rounds indent to a multiple of shiftwidth

""" Searching and Patterns
"set ignorecase			 " Default to using case insensitive searches,
"set smartcase			 " unless uppercase letters are used in the regex.
"set smarttab			 " Handle tabs more intelligently 
set hlsearch			" Highlight searches by default.
set incsearch			" Incrementally search while typing a /regex
map <silent> <Leader>, :noh<CR>

set backspace=2

" Moving to windows with Ctrl
"map <C-h> <C-w>h
"map <C-j> <C-w>j
"map <C-k> <C-w>k
"map <C-l> <C-w>l
"
" Cycling around windows
map <C-k> <C-w>w
map <C-j> <C-w>W



if has("autocmd")
	" tabstop 		-> 	changes the width of TAB character
	"
	" softtabstop	->	affects what happens when you press the <TAB> or <BS>
	"					keys. Its default value is the same as the value of 'tabstop', but when
	"					using indentation without hard tabs or mixed indentation, you want to
	"					set it to the same value as 'shiftwidth'. If 'expandtab' is unset, and
	"					'tabstop' is different from 'softtabstop', the <TAB> key will minimize
	"					the amount of spaces inserted by using multiples of TAB characters. For
	"					instance, if 'tabstop' is 8, and the amount of consecutive space
	"					inserted is 20, two TAB characters and four spaces will be used.
	"
	" shiftwidth	-> 	affects what happens when you press >>, << or ==. It
	"					also affects how automatic indentation works.
	"
	" expandtab		->	affects what happens when you press the <TAB> key. If
	"					'expandtab' is set, pressing the <TAB> key will always insert
	"					'softtabstop' amount of space characters. Otherwise, the amount of
	"					spaces inserted is minimized by using TAB characters.
	"
	" smarttab		->	affects how <TAB> key presses are interpreted
	"					depending on where the cursor is. If 'smarttab' is on, a <TAB> key
	"					inserts indentation according to 'shiftwidth' at the beginning of the
	"					line, whereas 'tabstop' and 'softtabstop' are used elsewhere. There is
	"					seldom any need to set this option, unless it is necessary to use hard
	"					TAB characters in body text or code.

	" Syntax of those languages is fussy over tabs Vs Spaces
	autocmd FileType make setlocal tabstop=8 softtabstop=8 shiftwidth=8
	autocmd FileType yaml setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab

	autocmd FileType c,cpp,java setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent

	" Python related files
	" au BufRead *.py compiler nose
	" autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
	autocmd FileType python setlocal expandtab tabstop=4 shiftwidth=4 softtabstop=4 smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with
	" autocmd BufRead *.py set errorformat=%C\ %.%#,%A\ \ File\ \"%f\"\\,\ line\ %l%.%#,%Z%[%^\ ]%\\@=%m

	" HTML/XML/CSS related files
	autocmd FileType html,xhtml,xml,css setlocal shiftwidth=4 tabstop=4 softtabstop=4
	autocmd BufNewFile,BufRead *.rss,*.atom setlocal filetype=xml

	autocmd FileType javascript setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent noexpandtab
	autocmd FileType php setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent noexpandtab

	" Ruby related files
	autocmd FileType ruby setlocal expandtab softtabstop=2 shiftwidth=2
	autocmd BufNewFile,BufRead Gemfile setlocal filetype=ruby
	autocmd BufNewFile,BufRead Vagrantfile setlocal filetype=ruby
	autocmd BufNewFile,BufRead Berksfile setlocal filetype=ruby
endif

if has("unix")
	if has("gui_macvim")
		let macvim_skip_colorscheme=1
		set guifont=Inconsolata\ for\ Powerline:h11
		set guioptions-=r
		set guioptions-=L

		colorscheme hybrid
	else
		let s:uname = system("uname")

		if s:uname == "Darwin\n"
			" Do OSX stuff here
		else
			" Do Linux stuff here
			" set background=dark
			" colorscheme solarized
		endif

		colorscheme hybrid
	endif
endif
