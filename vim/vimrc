set nocompatible
filetype off

" ==========================================================
" Vundle- Allows us to organize our vim plugins
" ==========================================================
" Load pathogen with docs for all plugins

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle "gmarik/vundle"

" zen coding (for HTML)
" CTRL + E -> Expand the tags
" CTRL + N -> Cycle through empty tags
Bundle "rstacruz/sparkup", {"rtp": "vim/"}

" FuGITive 
"
Bundle "tpope/vim-fugitive"

" NERDTree
Bundle "scrooloose/nerdtree"
nmap <silent> <Leader>n :NERDTreeToggle<CR>
let g:NERDTreeMapJumpNextSibling="l"
let g:NERDTreeMapJumpPrevSibling="h"

" <LEADER> + M -> Toggle NERDTree in all tabs
Bundle "jistr/vim-nerdtree-tabs"
nmap <silent> <Leader>m :NERDTreeTabsToggle<CR>

" Syntastic
Bundle "scrooloose/syntastic"

" Ident Guides
Bundle "nathanaelkane/vim-indent-guides"

Bundle 'Yggdroot/indentLine'

" Snipmate
Bundle "MarcWeber/vim-addon-mw-utils"
Bundle "tomtom/tlib_vim"
Bundle "garbas/vim-snipmate"
Bundle "honza/vim-snippets"

" CtrlP
Bundle "kien/ctrlp.vim"

" Airline
Bundle "bling/vim-airline"
set laststatus=2
let g:airline_powerline_fonts=1

" Colorschemes
Bundle "flazz/vim-colorschemes"

" Colorscheme switcher
" <F8> -> :NextColorScheme
" <S-F8> -> :PrevColorScheme
Bundle "xolox/vim-misc"
Bundle "xolox/vim-colorscheme-switcher"

Bundle "vim-scripts/django.vim"
Bundle "gregsexton/MatchTag"
Bundle "tpope/vim-surround"

filetype plugin on 
filetype indent on

" ==========================================================
" Basic Settings
" ==========================================================
syntax on
filetype on
set number

" displays tabs and end of lines
set listchars=tab:▸\ ,eol:¬,trail:-,precedes:<,extends:>
"set listchars=tab:▸\ ,eol:$
"set list

""" Reading/Wrinting
set ffs=unix,dos,mac

""" Moving Around/Editing
set cursorline
"set cursorcolumn
set tabstop=4		" <tab> inserts 4 spaces
set shiftwidth=4
set noexpandtab		" Use tabs, not spaces, for autoindent/tab key.
set shiftround		" rounds indent to a multiple of shiftwidth

""" Searching and Patterns
"set ignorecase			 " Default to using case insensitive searches,
"set smartcase			 " unless uppercase letters are used in the regex.
"set smarttab			 " Handle tabs more intelligently 
set hlsearch			" Highlight searches by default.
set incsearch			" Incrementally search while typing a /regex
map <silent> <Leader>, :noh<CR>

" Moving to windows with Ctrl
"map <C-h> <C-w>h
"map <C-j> <C-w>j
"map <C-k> <C-w>k
"map <C-l> <C-w>l
"
" Cycling around windows
map <C-k> <C-w>w
map <C-j> <C-w>W

if has("autocmd")
	" Source the vimrc file after saving it
	"autocmd bufwritepost .vimrc source $MYVIMRC

	" Syntax of those languages is fussy over tabs Vs Spaces
	autocmd FileType make setlocal tabstop=8 softtabstop=8 shiftwidth=8
	autocmd FileType yaml setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab

	autocmd FileType c,cpp,java setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent

	" Python related files
	"au BufRead *.py compiler nose
	autocmd FileType python setlocal omnifunc=pythoncomplete#Complete
	autocmd FileType python setlocal expandtab shiftwidth=4 softtabstop=4 smartindent cinwords=if,elif,else,for,while,try,except,finally,def,class,with
	autocmd BufRead *.py set errorformat=%C\ %.%#,%A\ \ File\ \"%f\"\\,\ line\ %l%.%#,%Z%[%^\ ]%\\@=%m

	" HTML/XML/CSS related files
	autocmd FileType html,xhtml,xml,css setlocal shiftwidth=4 tabstop=4 softtabstop=4
	autocmd BufNewFile,BufRead *.rss,*.atom setlocal filetype=xml

	autocmd FileType javascript setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent noexpandtab
	autocmd FileType php setlocal tabstop=4 softtabstop=4 shiftwidth=4 smartindent cindent noexpandtab

	" Ruby related files
	autocmd FileType ruby setlocal expandtab softtabstop=2 shiftwidth=2
	autocmd BufNewFile,BufRead Gemfile setlocal filetype=ruby
	autocmd BufNewFile,BufRead Vagrantfile setlocal filetype=ruby
	autocmd BufNewFile,BufRead Berksfile setlocal filetype=ruby
endif

if has("gui_macvim")
	set guifont=Inconsolata\ for\ Powerline:h11
	set guioptions-=r
	set guioptions-=L

	colorscheme codeschool
endif

if has("unix")
	let s:uname = system("uname")
	if s:uname == "Darwin\n"
		" Do Mac stuff here
		colorscheme 256-grayvim 
	else
		" Do Linux stuff here
		" set background=dark
		" colorscheme solarized
	endif
endif

